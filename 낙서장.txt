        node.js :  브라우저밖에서 javascript가 돌아가게 해줌 
                   node.js를 설치하면 터미널 창에서 javascript를 실행할 수 있다.
                   스크립트언어는 특정 프로그램안에서만 작동하기 때문에 등장
                   javascript 런타임이다
                   런타임 : 특정 언어로 만든 프로그램을 실행할 수 있는 환경
                   javascript로 백엔드서버를 만들기위한 런타임 환경

        npm : javascript 언어를 위한 패키지 매니저, 여러 패키지를 불러올 수 있다.
              node.js와 같이 사용된다 node.js 설치하면서 같이 자동 설치됨

        json : 파일에 정보를 저장하는 방식을 유저가 설정, node.js를 위해 반드시 package.json 이라고 짓는다.

        dependencies : 프로젝트에 필요한 dependencies
        Devdependencies : 개발자를 위한 dependencies

        babel : 최신 문법 코드를 사용할 수 있게해준다.(최신 => 예전)

        nodemon : 파일이 수정되는걸 감시해주는 패키지, 수정되면 알아서 재시작해준다.



        ===========================================
        08-01 서버 node.js로 서버 구축
        
        1.src 폴더에 로직,코드 저장
        파일들이 많아 져서 모든 코드나 로직들을 src폴더에다 저장

        08-02 middleware

        middleware : request와 response 사이에 있는 중간소프트웨어
        일반적으로 중간에 있는 함수가 해당하고 controller라 불린다(argument로 req, res,next 존재)
        함수가 다른함수를 호출하는 것을 middleware라고 한다.(쉽게 말해 토스)
        next는 어디든 존재 가능

        app.use() : global middleware를 만들어준다.

        middleware가 next()를 호출 안하면 다음 함수는 실행되지 않는다.

        middleware의 여러정보가 기록되는 -morgan-을 설치한다.

        08-03 Router
        
        router : 컨트롤어와 URL관리를 쉽게 해준다.
        server_4-1.js 파일 보면서 router만들고 따로 분리 해준다   
        export 하는 이유 : 모든프로젝트는 분리된 모듈이여서 바깥에 공유하기 위해서는 반드시 해야한다.
        default 하는 이유  :폴더 전체를 줄 필요가 없으니까 변수만 넘겨준다.(하나 밖에 안된다.)
        
        Router와Controller를 분리해준다.     
        각각의 Controller를 export 해줘서 오브젝트{} 형식으로 import해준다.
        :id : url에 변수를 넣어줘서 관리를 해준다      -> : <- : 파라미터 필수
        